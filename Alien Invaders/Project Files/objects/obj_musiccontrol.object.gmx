<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set hp, so won;t cause error if hit by bomb
hp = 0; 

//Pause all sounds, so anything that is started at the end of the previous room is paused
audio_pause_all();

//If in menu, instruction , or transition room, play title music
if room == rm_menu || room == rm_inst || room == rm_transition
    {
    if audio_is_paused(snd_title_music)
        {        
        audio_resume_sound(snd_title_music);
        }
    else
        {
        audio_play_sound(snd_title_music, 1, true);
        }   
    }
//if not in above rooms, check if in below rooms
else 
    { 
    //if in game over or destroyed rooms, play gameover music   
    if room == rm_gameover || room == rm_destroyed
        {
        if audio_is_paused(snd_gameover_music)
            {
            audio_resume_sound(snd_gameover_music);
            }
        else
            {
            audio_play_sound(snd_gameover_music, 1, true);
            }
        }
    //else check if in boss rooms    
    else 
        {
        //if in boss rooms, play boss music
        if room == rm_main_space_boss || room == rm_main_asteroid_boss || room == rm_main_orbit_boss || room == rm_main_atmosphere_boss
            {
            if audio_is_paused(snd_boss_music)
                {
                audio_resume_sound(snd_boss_music);
                }
            else
                {
                audio_play_sound(snd_boss_music, 1, true);
                }
            }
        //else you are in the level or story rooms, so play level music       
        else
            {
            if audio_is_paused(snd_level_music)
                {
                audio_resume_sound(snd_level_music);
                }
            else
               {
               audio_play_sound(snd_level_music, 1, true);
               }
            }    
               
        }    
        
        
    }

    
//fade each track in over 0.5 second    
audio_sound_gain(snd_title_music, 0.3, 500);
audio_sound_gain(snd_gameover_music, 0.3, 500);
audio_sound_gain(snd_boss_music, 0.3, 500);
audio_sound_gain(snd_level_music, 0.3, 500);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//at end of room, pause all audio. This will pause all back ground music, as well as any
//sound effects that were triggered as the level was ending. 
audio_pause_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
